namespace $.$$ {
	export class $tale_battle extends $.$tale_battle {

		enemies() {
			return [
				{
					icon: 'ü¶Ä',
					name: '–ö—Ä–∞–±',
					hp: 10,
					dmg: 1,
					speed: 5,
				},
				{
					icon: 'ü¶á',
					name: '–õ–µ—Ç—É—á–∞—è –º—ã—à—å', 
					hp: 3,
					dmg: 2,
					speed: 3,
				},
				{
					icon: 'üêù',
					name: '–ü—á–µ–ª–∞',
					hp: 1,
					dmg: 3,
					speed: 10,
				},
				{
					icon: 'üê≤',
					name: '–î—Ä–∞–∫–æ–Ω',
					hp: 100,
					dmg: 9,
					speed: 2,
				},
			]
		}

		@$mol_mem
		hero( next?: any ) {
			console.log( 'hero', next )
			return next ?? {
				icon: 'üßôüèº‚Äç‚ôÇÔ∏è',
				name: '–ê–±—Ä–∞—Ö–∞–º',
				hp: 10,
				dmg: 2,
				speed: 3,
				exp: {
					attack: 0,
				},
			}
		}

		@$mol_mem
		enemy( next?: any ) {
			return next ?? this.enemies()[ 0 ]
		}

		@$mol_action
		hero_attack() {
			this.enemy_attack()
			this.hero( { ...this.hero(), hp: this.hero().hp - this.enemy().dmg, exp: { ...this.hero().exp, attack: this.hero().exp.attack + 1 } } )
			console.log( 'hero_attack', this.hero() )
			this.logic()
		}

		calc_dmg( unit: any ): number {
			console.log( 'calc_dmg', unit )
			return unit.dmg + (unit.exp?.attack || 0)
		}

		@$mol_action
		enemy_attack() {
			this.enemy( { ...this.enemy(), hp: this.enemy().hp - this.calc_dmg(this.hero())} )
		}

		logic() {
			if (this.enemy().hp <= 0) {
				this.next_enemy()
			}
			if (this.hero().hp <= 0) {
				this.restart()
			}
		}

		restart() {
			this.hero( null )
		}

		hero_info(): string {
			return this.common_info( this.hero() )
		}

		next_enemy() {
			return this.enemy($mol_array_lottery(this.enemies()))
		}

		enemy_info(): string {
			return this.common_info( this.enemy() )
		}

		common_info( unit?: any ): string {
			return `${ unit.icon }${ unit.name }\n üåü${JSON.stringify(unit.exp) ?? '-'}\n‚ù§Ô∏è${ unit.hp } ‚öîÔ∏è${ unit.dmg }(${this.calc_dmg(unit)}) üëü${ unit.speed }`
		}

		leave_and_heal( next?: any ) {
			this.hero( { ...this.hero(), hp: 10 } )
			this.next_enemy()
		}
	}
}
